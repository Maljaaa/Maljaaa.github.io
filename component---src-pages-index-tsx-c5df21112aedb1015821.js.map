{"version":3,"file":"component---src-pages-index-tsx-c5df21112aedb1015821.js","mappings":"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","sources":["webpack://seungmin-gatsby-blog/./src/models/post.ts","webpack://seungmin-gatsby-blog/./src/components/FeaturedPostCard/styled.tsx","webpack://seungmin-gatsby-blog/./src/components/FeaturedPostCard/index.tsx","webpack://seungmin-gatsby-blog/./src/components/FeaturedPostColumn/styled.ts","webpack://seungmin-gatsby-blog/./src/components/FeaturedPostColumn/index.tsx","webpack://seungmin-gatsby-blog/./src/pages/index.tsx"],"sourcesContent":["import { MarkdownRemark } from '../type';\n\nexport default class PostClass {\n  id;\n  excerpt;\n  emoji;\n  html;\n  slug;\n  title;\n  author;\n  date;\n  categories;\n\n  constructor(node: MarkdownRemark) {\n    const { id, html, excerpt, frontmatter, fields } = node;\n    const { slug } = fields;\n    const { emoji, categories, title, author, date } = frontmatter;\n\n    this.id = id;\n    this.excerpt = excerpt;\n    this.emoji = emoji;\n    this.html = html;\n    this.slug = slug;\n    this.title = title;\n    this.author = author;\n    this.date = date;\n    this.categories = categories.split(' ');\n  }\n}\n","import styled from '@emotion/styled';\nimport { Link } from 'gatsby';\n\nimport { contentMaxWidth, MOBILE_MEDIA_QUERY } from '@/src/styles/const';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 15px;\n`;\n\nexport const PostCard = styled(Link)`\n  display: flex;\n  height: 100%;\n  width: 100%;\n  max-width: ${contentMaxWidth};\n  border-radius: 10px;\n  cursor: pointer;\n  gap: 15px;\n  align-items: center;\n  padding-right: 15px;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.color.gray10};\n    @media ${MOBILE_MEDIA_QUERY} {\n      background-color: transparent;\n    }\n  }\n\n  @media ${MOBILE_MEDIA_QUERY} {\n    min-height: 50px;\n    &:active {\n      background-color: ${({ theme }) => theme.color.gray10};\n    }\n  }\n`;\n\nexport const Emoji = styled.div`\n  font-size: 40px;\n  background-color: ${({ theme }) => theme.color.gray10};\n  border-radius: 50%;\n  width: 60px;\n  min-width: 60px;\n  height: 60px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-top: 5px;\n  box-sizing: border-box;\n\n  @media ${MOBILE_MEDIA_QUERY} {\n    font-size: 30px;\n    width: 50px;\n    min-width: 50px;\n    height: 50px;\n  }\n`;\n\nexport const Title = styled.div`\n  font-size: 18px;\n  word-break: break-all;\n  line-height: 120%;\n\n  @media ${MOBILE_MEDIA_QUERY} {\n    font-size: 15px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    word-break: break-word;\n    line-height: 120%;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n  }\n`;\n\nexport const Date = styled.div`\n  font-size: 13px;\n  color: ${({ theme }) => theme.color.gray60};\n  font-family: GmarketSansLight;\n  margin-top: 3px;\n\n  @media ${MOBILE_MEDIA_QUERY} {\n    font-size: 10px;\n    margin-left: auto;\n  }\n`;\n","import React from 'react';\n\nimport PostClass from '@/src/models/post';\n\nimport * as S from './styled';\n\ntype FeaturedPostCardProps = {\n  post: PostClass;\n};\n\nconst FeaturedPostCard: React.FC<FeaturedPostCardProps> = ({ post }) => {\n  const { id, slug, title, date, emoji } = post;\n\n  return (\n    <S.Wrapper>\n      <S.PostCard key={id} to={slug}>\n        {emoji && <S.Emoji>{emoji}</S.Emoji>}\n        <S.Title className='title'>{title}</S.Title>\n        <S.Date>{date}</S.Date>\n      </S.PostCard>\n    </S.Wrapper>\n  );\n};\n\nexport default FeaturedPostCard;\n","import styled from '@emotion/styled';\n\nimport { MOBILE_MEDIA_QUERY } from '@/src/styles/const';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.div<{ fill: 'true' | 'false' }>`\n  font-size: 20px;\n  width: fit-content;\n  padding: 10px;\n  background-color: ${({ theme, fill }) => (fill === 'true' ? theme.color.black40 : theme.color.white100)};\n  color: ${({ theme, fill }) => (fill === 'true' ? theme.color.white100 : theme.color.black40)};\n  margin-bottom: 25px;\n  border: 1px solid ${({ theme, fill }) => (fill === 'true' ? theme.color.white100 : theme.color.black40)};\n\n  @media ${MOBILE_MEDIA_QUERY} {\n    font-size: 17px;\n    padding: 8px 10px;\n  }\n`;\n","import PostClass from '@/src/models/post';\n\nimport FeaturedPostCard from '../FeaturedPostCard';\nimport * as S from './styled';\n\ntype FeaturedPostColumnProps = {\n  title: string;\n  posts: PostClass[];\n  fill?: boolean;\n};\n\nconst FeaturedPostColumn: React.FC<FeaturedPostColumnProps> = ({ title, posts, fill = true }) => {\n  return (\n    <S.Wrapper>\n      <S.Title fill={fill ? 'true' : 'false'}>{title}</S.Title>\n      {posts.map((post, index) => (\n        <FeaturedPostCard key={index} post={post} />\n      ))}\n    </S.Wrapper>\n  );\n};\n\nexport default FeaturedPostColumn;\n","import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport FeaturedPostColumn from '../components/FeaturedPostColumn';\nimport MainBanner from '../components/MainBanner';\nimport Seo from '../components/Seo';\nimport Layout from '../layout';\nimport PostClass from '../models/post';\nimport { AllMarkdownRemark, SiteMetadata } from '../type';\n\ntype HomeProps = {\n  data: {\n    site: { siteMetadata: SiteMetadata };\n    allMarkdownRemark: AllMarkdownRemark;\n  };\n  location: Location;\n};\n\nconst Home: React.FC<HomeProps> = ({ location, data }) => {\n  const posts = data.allMarkdownRemark.edges.map(({ node }) => new PostClass(node));\n  const featuredPosts = posts.filter((node) => node.categories.find((category) => category === 'featured'));\n  const { author } = data.site.siteMetadata;\n\n  const recentPosts = posts.slice(0, 3);\n\n  const internPosts = featuredPosts.filter((post) => post.categories.find((category) => category === '인턴회고'));\n  const livePosts = featuredPosts.filter((post) => post.categories.find((category) => category === '회고'));\n  const experiencePosts = featuredPosts.filter((post) => post.categories.find((category) => category === 'Experience'));\n\n  return (\n    <Layout location={location}>\n      <Seo title='개발자 단민' />\n      <MainBanner author={author} />\n\n      <FeaturedPostColumn title='Recent Posts' posts={recentPosts} fill={false} />\n      <FeaturedPostColumn title='인턴만 다섯 번을 한 사람이 있다?' posts={internPosts} />\n      <FeaturedPostColumn title='LIFE' posts={livePosts} />\n      <FeaturedPostColumn title='EXPERIENCE' posts={experiencePosts} />\n    </Layout>\n  );\n};\n\nexport default Home;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 500, truncate: true)\n          frontmatter {\n            categories\n            title\n            emoji\n            date(formatString: \"YYYY.MM.DD\")\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n\n    site {\n      siteMetadata {\n        siteUrl\n        language\n        author {\n          name\n          nickname\n          stack\n          bio {\n            email\n            residence\n            bachelorDegree\n          }\n          social {\n            github\n            linkedIn\n            resume\n          }\n          legacyBlog {\n            velog\n            tistory\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["PostClass","node","id","html","excerpt","frontmatter","slug","fields","emoji","categories","title","author","date","this","split","Wrapper","_styled","target","name","styles","PostCard","Link","contentMaxWidth","_ref","theme","color","gray10","MOBILE_MEDIA_QUERY","_ref2","Emoji","_ref3","Title","Date","_ref4","gray60","post","___EmotionJSX","S","key","to","className","fill","black40","white100","posts","_ref$fill","map","index","FeaturedPostCard","location","data","allMarkdownRemark","edges","featuredPosts","filter","find","category","site","siteMetadata","recentPosts","slice","internPosts","livePosts","experiencePosts","Layout","Seo","MainBanner","FeaturedPostColumn"],"sourceRoot":""}