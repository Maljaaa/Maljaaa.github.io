{"componentChunkName":"component---src-templates-posts-template-index-tsx","path":"/posts","result":{"pageContext":{"currentCategory":"All","edges":[{"node":{"id":"53cf8da6-2004-52a0-897a-2e96634ee201","excerpt":"Git으로 협업을 하고 있다면 당연히 써봤을 clone과 fork 기능! 프로젝트 초기에 그라운드 룰을 정할 때면 항상 하게 되는 고민이 있다. 🤷‍♂️ 클론받아서 피쳐별로 브랜치 파서 main으로 PR 올릴까요? 🤷‍♀️ 포크 떠서 origin에서 upstream으로 PR 올리는 건 어때요?    Git Clone clone은 원격 저장소를 로컬 환경으로 복제해오는 방법이다. 이를 통해 원격 저장소에 있는 모든 코드, 히스토리, 브랜치 등을 로컬 환경에 가져올 수 있다.   Git Fork Fork는 다른 사람의 원격 저장소를 복제해서 내 저장소를 따로 만드는 방법이다. 즉, Fork를 한 후 내 저장소를 Clone해서 작업하게 되는 것이다.   보통 다른 프로젝트나 오픈소스에 기여할 때 Fork를 많이 사용하곤 한다. 원본 프로젝트와 완전히 분리된 환경에서 작업하여 코드를 안전하게 수정하고 실험할 수 있기 때문이다. 그렇다면 팀 프로젝트를 할 땐 어떻게 해야 할까?   Clone은 위험할…","fields":{"slug":"/46-clone-fork/"},"frontmatter":{"categories":"Dev","title":"Git clone과 fork, 뭘 써야할까?","date":"2023.08.08"}},"next":{"fields":{"slug":"/45-debounce-throttle/"}},"previous":null},{"node":{"id":"e0b23b7f-9c76-57bf-9c92-29910d4cd905","excerpt":"input 또는 scroll 이벤트를 아무 생각 없이 다루다보면 내 의도와 다르게 엄청나게 많은 요청이 발생하게 되곤 한다. 예를 들어, 스크롤 이벤트가 걸려있는 상태에서 스크롤을 몇 천 픽셀 내리게 되면 100개 이상의 스크롤 이벤트에 대한 콜백이 발생할 것이고, 이는 엄청난 리소스를 잡아먹을 것이다..!  바로 이때 나 을 사용하여 이벤트나 함수의 실행 빈도를 줄여 성능을 높일 수 있다. 이벤트 핸들러가 많은 연산을 수행할 때, 제약을 걸어 제어할 수 있는 수준으로 이벤트를 발생시키게끔 하는 것이다. 그렇다면 이 둘의 차이는 뭘까?   Debounce 는 이벤트를 그룹화하여 특정 시간이 지난 후 하나의 이벤트만 발생하도록 하는 것이다. 즉, 연이어 호출되는 함수들 중 마지막 또는 제일 처음만 호출하도록 하는 것이다. 따라서 일정 시간 내에 이벤트가 계속 발생하면 함수가 실행되지 않다가, 이후 일정 시간 동안 이벤트가 발생하지 않으면 함수가 실행된다. 특히 텍스트 인풋에 글자를 …","fields":{"slug":"/45-debounce-throttle/"},"frontmatter":{"categories":"Dev","title":"이벤트 멈춰! Debounce와 Throttle","date":"2023.07.20"}},"next":{"fields":{"slug":"/44-wanted/"}},"previous":{"fields":{"slug":"/46-clone-fork/"}}},{"node":{"id":"90726097-fcb8-5c77-a063-83c735a5b3c8","excerpt":"원티드 아티클 원티드를 한번쯤은 채용 사이트로 접해 본 경험이 있으리라 생각한다. 나도 취준 때 원티드를 정말 많이 사용하곤 했다. 원티드는 커리어 플랫폼으로 현재 여러 서비스를 제공하고 있는데, 직장인을 위한 다양한 아티클을 만드는 것도 그 중 하나다.  원티드의 이벤트 탭에 들어가면 다양한 카테고리의 아티클을 볼 수 있다. 이미 내 아티클들이 올라가 있는 걸 볼 수 있다 😇   개발 취업 관련 아티클 필진으로 섭외되다     어느 날 원티드의 콘텐츠 에디터 분께서 연락을 주셨고, 세 가지 주제로 시리즈 연재를 하게 되었다. 그렇게 지난 6월 5일, 6월 26일, 7월 19일에 각각 글이 한 편씩 발행되었고, 현재 나만 알고 싶은 개발자 취업 치트키 시리즈의 6, 7, 8화로 올라가있다.   미팅하면 빠질 수 없는 회사 구경 놀랍게도 롯데타워에 같이 입주해있었던 원티드..! 덕분에(?) 퇴근 후에 빠르게 미팅 장소로 갈 수 있었다 :)       회사에 커피 머신과 간식 창고가 …","fields":{"slug":"/44-wanted/"},"frontmatter":{"categories":"featured Experience","title":"원티드에 개발 아티클을 기고하다","date":"2023.07.19"}},"next":{"fields":{"slug":"/43-generic/"}},"previous":{"fields":{"slug":"/45-debounce-throttle/"}}},{"node":{"id":"fc56cd05-e1d9-5e49-818c-fbe5b81fb4a2","excerpt":"타입스크립트는 자바스크립트의 상위 집합 언어로, 정적 타입을 지원하여 코드의 안정성과 생산성을 향상시켜준다. 이젠 더 이상 자바스크립트를 쓸 수 없는 몸이 되어버린..  그 중에서도 제네릭(Generic)은 타입스크립트의 핵심 기능 중 하나다. 오늘은 제네릭의 개념, 사용법, 그리고 실제 활용 방법에 대해 알아보자!   제네릭이란? 제네릭은 타입스크립트에서 코드의 일반화(generic)를 가능하게 해주는 기능이다. 제네릭을 사용하면 함수, 클래스, 인터페이스 등을 다양한 타입에 대해 작동하도록 만들 수 있다. 제네릭을 사용하면 컴파일 시점에서 타입 체크를 할 수 있어 런타임 에러를 사전에 방지할 수 있고, (타입 안정성) 한 번 작성한 제네릭 코드를 다양한 타입에 대해 재사용할 수 있고, (재사용성) 제네릭을 통해 일반적인 동작을 정의하고, 구체적인 타입은 사용하는 곳에서 결정할 수 있다. (추상화) 그렇다면 실제로 어떻게 제네릭을 사용하는지 살펴보자!   1. 함수 제네릭 함수를…","fields":{"slug":"/43-generic/"},"frontmatter":{"categories":"Dev","title":"타입스크립트의 꽃, 제네릭","date":"2023.07.16"}},"next":{"fields":{"slug":"/42-package-manager/"}},"previous":{"fields":{"slug":"/44-wanted/"}}},{"node":{"id":"4d9eff0a-f657-56c7-9a14-c45d5720afb5","excerpt":"💡 깨알 상식 : etc.는 라틴어 et cetera의 줄임말이다.   자바스크립트 사용하는 사람~?  타입스크립트 사용하는 사람~?  외부 패키지 사용하는 사람~?    패키지 매니저란? 자바스크립트 프로젝트를 개발한다면 당연하게 사용하는 패키지 매니저! 자바스크립트 패키지 매니저는 자바스크립트 프로젝트에서 사용되는 의존성 관리 도구다. 패키지 매니저는 프로젝트에 필요한 외부 라이브러리, 모듈, 플러그인 등을 손쉽게 설치하고 관리하는 역할을 한다. 우리들의 만능 집사 패키지 매니저!    자바스크립트 패키지 매니저의 주요 기능은 다음과 같다. 패키지 설치 패키지 매니저를 사용하여 프로젝트에 필요한 패키지를 설치할 수 있다. 패키지는 일반적으로 오픈 소스 라이브러리이며, 패키지 매니저를 통해 패키지의 이름 또는 버전을 지정하여 설치할 수 있다. 의존성 관리 패키지 매니저는 프로젝트의 의존성을 관리한다. 패키지는 다른 패키지에 의존할 수 있으며, 패키지 매니저는 이러한 의존성을 자동…","fields":{"slug":"/42-package-manager/"},"frontmatter":{"categories":"Dev","title":"패키지 매니저, 뭘 쓸까? (npm, pnpm, yarn, yarn berry, etc.)","date":"2023.07.02"}},"next":{"fields":{"slug":"/41-jinhak-catch/"}},"previous":{"fields":{"slug":"/43-generic/"}}},{"node":{"id":"7cf6e1ec-a621-5c97-8da8-3a0645a29b49","excerpt":"우리 회사는 구성원으로서 외부 기고/연사 활동을 진행할 경우 승인을 받아야 하는데, 꽤나 큰 행사라고 생각되어 절차가 까다로워지지 않을까 걱정이 들기도 했다. 근데 오히려 재하님께서 매우 긍정적인 응원의 말씀을 해주셔서 너무나도 감사했다. 그렇게 해당 제안을 반갑게 받아들여서, 나는 멘토로서 프로그램에 참여하게 되었다.   리얼 인턴 리얼 인턴은 진학사 캐치에서 6/13일부터 2주간 진행된 캐치 커리어 콘이다. 연사로서 줌 라이브 강의를 찍게 되었는데, 커리어 콘이 시작되는 날 방송되는 유튜브 라이브에도 참석하게 되었다.       연사자 프로필용 사진을 요청받아서 (제주도에서 열심히 찍어서) 공유드렸는데…  100% 합격이라뇨… 🤦‍♀️🙅‍♀️🙅‍♀️🙅‍♀️ 그래도 덕분에(?) 맘에 드는 프로필 사진을 건질 수 있었다 :)   1. 캐치TV 라이브 토크콘서트 진학사 캐치에서는 캐치TV라는 유튜브 채널을 운영하고 있는데, 인턴 취업 산증인 토크를 주제로 촬영을 하게 되었다. 해당 촬영은 진학사 본사에서…","fields":{"slug":"/41-jinhak-catch/"},"frontmatter":{"categories":"featured Experience","title":"진학사 캐치와의 만남","date":"2023.06.26"}},"next":{"fields":{"slug":"/40-image-upload-preview/"}},"previous":{"fields":{"slug":"/42-package-manager/"}}},{"node":{"id":"a108a3e5-4358-5a70-8ae6-60c162b34590","excerpt":"1탄의 내용을 참고하여 이미지 업로드 미리보기를 구현해보자. 놀랍게도 그 방법은 한두 개가 아니다!    1. URL.createObjectURL 참고 자료: MDN web docs: URL.createObjectURL()  메서드를 사용하여 선택한 이미지 파일을 Blob 또는 File 객체로 변환하고, 그 객체를 URL로 변환하여 미리보기 이미지로 사용할 수 있다. 이 방법은 메모리 사용량이 적고 효율적이다. 하지만 URL은 사용이 완료되면 을 호출하여 메모리 해제를 해주어야 한다. 장점 간단하고 직관적인 방법으로 이미지를 미리보기할 수 있다. 추가적인 데이터 변환이나 처리 없이 바로 URL을 생성하여 사용할 수 있다. 메모리 관리에 대한 부담이 적다. 단점 생성된 URL은 페이지 세션이나 브라우저 세션 동안 유지되며, 페이지를 벗어나도 자동으로 해제되지 않는다. 큰 이미지 파일을 다룰 경우 메모리 사용량이 늘어날 수 있다.   2. FileReader.readAsDataURL …","fields":{"slug":"/40-image-upload-preview/"},"frontmatter":{"categories":"Dev","title":"<Blob File URL ArrayBuffer> 그들의 사각관계?! ~이미지 업로드 미리보기를 구현하고 싶습니다~ : 2탄","date":"2023.06.19"}},"next":{"fields":{"slug":"/39-file-blob-url-arraybuffer/"}},"previous":{"fields":{"slug":"/41-jinhak-catch/"}}},{"node":{"id":"48929e83-7b5b-5b7d-96a0-8a6070810d0e","excerpt":"침착맨 라이트노벨 제목 월드컵 편을 보고 재밌어서 써본 제목입니다    파일을 다루는 일이 생길 때마다 구글링을 하게 되는 것 같다. 나만 그런 거 아니겠지?  여튼 그래서 들고와 본 주제!    Blob, File, 그리고 URL File, Blob, 그리고 URL은 웹 애플리케이션에서 파일과 데이터를 표현하고 다루는 데 사용되는 개념들이다. Blob Blob은 일련의 데이터를 나타내는 객체다. Blob은 Binary Large Object의 약자로, 텍스트나 이미지, 오디오, 비디오 등과 같은 다양한 종류의 데이터를 처리할 수 있다. File 객체는 Blob 객체의 하위 클래스로 볼 수 있다. File File은 사용자의 로컬 파일 시스템에서 선택한 파일을 나타내는 객체다. 일반적으로 파일 업로드나 파일 조작을 위해 사용된다. File 객체는 Blob 객체를 상속하며, 파일의 이름, 크기, 타입 등의 추가적인 정보를 가지고 있다. URL URL은 웹 리소스의 주소를 나타내는 문…","fields":{"slug":"/39-file-blob-url-arraybuffer/"},"frontmatter":{"categories":"Dev","title":"<Blob File URL ArrayBuffer> 그들의 사각관계?! ~이미지 업로드 미리보기를 구현하고 싶습니다~ : 1탄","date":"2023.06.18"}},"next":{"fields":{"slug":"/38-apps-script/"}},"previous":{"fields":{"slug":"/40-image-upload-preview/"}}},{"node":{"id":"2340f145-a8d1-5c91-b0aa-7c33364e0def","excerpt":"현재 IT 동아리를 운영 중에 있는 나. SIPE 많관부탁드립니다 😉😉 구글폼으로 서류 원서를 접수받고, 서류 결과 메일을 보내야하는 상황에 다다르는데..   이거, 한 사람 한 사람 메일을 다 따로 보내야 하는 건가?    하지만 개발자로서 그런 노가다를 하는 것은 용납할 수 없는 일.  결국 구글에서 제공하는 API를 발견해내고야 말았다. 링크를 들어가보면 메일 말고도 다양한 API를 제공하는 것을 볼 수 있다.   1. 구글폼 상단의 를 클릭하면 응답을 스프레드시트로 확인할 수 있다.    2. 스프레드시트 메뉴의 를 클릭하자.    3. 코드를 작성하자!  이제 상단의 Run만 누르면 메일이 발송되는데, 정말 배포도 아닌 코드 실행이 이렇게 긴장되는 건 처음이었다. 이렇게 많은 수의 사람들에게 동시에 메일을 보내는 것도 처음인데다, 누군가에게는 불합격 소식을 전할 수밖에 없었기에 너무 죄송스러운 마음이 들기도 했다.    여튼 무사히 한 고비를 넘겼고, 이제 시작인 우리 S…","fields":{"slug":"/38-apps-script/"},"frontmatter":{"categories":"Dev","title":"구글 스프레드시트 메일 자동화: Apps Script","date":"2023.06.11"}},"next":{"fields":{"slug":"/37-event-loop/"}},"previous":{"fields":{"slug":"/39-file-blob-url-arraybuffer/"}}},{"node":{"id":"6c58fad4-81f2-5ffc-803c-3bc78b5ff894","excerpt":"지난 글에서 에 대해 알아보았다. 어떤 독자는 해당 글을 읽으면서 한 궁금증이 떠올랐을지도 모른다. ‘왜 은 타이머 주기를 보장하지 않는 거지?’\n 이를 알기 위해서는 이벤트 루프에 대해 알아야 하는데, 우선 자바스크립트가 어떻게 동작하는지부터 알아보자.   자바스크립트의 동작 자바스크립트 엔진은 하나의 콜 스택을 가지는 싱글 스레드 모델로 동작한다. 하지만 현실에서 자바스크립트는 웹 브라우저나 노드js와 같은 멀티스레드 환경에 임베디드되어 실행되기 때문에 자바스크립트와 웹api, 이벤트 루프 등을 분리하여 말하기는 어렵다. 따라서 자바스크립트를 작동시킬 때는 싱글 스레드와 멀티 스레드의 타이밍이 따로 존재한다고 말할 수 있다. 일반적으로 프로그램은 코드를 위에서 아래로 순차적으로 실행하지만, 이벤트 루프를 통해 이벤트가 발생할 때마다 해당 이벤트에 대한 작업을 처리할 수 있다. 이를 통해 비동기 작업을 효율적으로 처리할 수 있고, 블로킹되는 작업 없이 다른 작업을 계속 수행할 수…","fields":{"slug":"/37-event-loop/"},"frontmatter":{"categories":"Dev","title":"이딴 게.. 타이머? 자바스크립트의 런타임과 Event Loop","date":"2023.06.10"}},"next":{"fields":{"slug":"/36-RAF/"}},"previous":{"fields":{"slug":"/38-apps-script/"}}},{"node":{"id":"41571ff0-c3d0-5c13-a4fe-7ddb927688a2","excerpt":"과 이 정확한 타이머 주기를 보장하지 않는다는 사실, 알고 계신가? 과 이 불필요한 리소스를 소비할 가능성이 있다는 사실, 알고 계신가? 과 이 비동기적으로 작업을 비동기적으로 예약한다는 사실, 알고 계신가?      requestAnimationFrame이란? 은 브라우저에서 제공하는 메서드로, 애니메이션과 그 외의 반복 작업을 수행하기 위해 사용된다. 이 메서드는 브라우저의 리페인트 주기에 맞게 콜백 함수를 실행하도록 예약한다. 콜백 함수는 화면이 갱신되기 전에 실행되므로, 부드럽고 성능이 좋은 애니메이션 효과를 구현할 수 있다.   requestAnimationFrame을 사용해보자! 을 호출할 때, 실행하고자 하는 콜백 함수를 전달한다. 이 콜백 함수는 브라우저에서 리페인트 주기에 따라 호출된다. 콜백 함수는 브라우저에 의해 전달되는 단일 인수로 실행된다. 이 인수는  형식으로 제공되며, 애니메이션 시작 이후 경과한 시간을 나타낸다. 이 값을 활용하여 애니메이션을 제어할 수…","fields":{"slug":"/36-RAF/"},"frontmatter":{"categories":"Dev","title":"애니메이션을 그린다고요? setTimeout 싫어요! requestAnimationFrame 좋아요!","date":"2023.06.01"}},"next":{"fields":{"slug":"/35-css-module/"}},"previous":{"fields":{"slug":"/37-event-loop/"}}},{"node":{"id":"e139c1f9-10b4-5993-97e8-29aa0fb06eea","excerpt":"개인적으로 보통은 styled-components나 emotion을 사용한 CSS-in-JS 기법을 많이 쓰는데, 이번 글에서는 생략하도록 하겠다.   외부 CSS 프레임워크를 쓰는 우리 팀. 하지만 CSS 프레임워크 하나로 모든 게 뚝딱 완성될 리는 없었다. 어쨌거나 CSS 커스터마이징이 필요했는데… \n🙋 “inline으로 커스텀할까요? 아니면 className을 추가할까요?”   Inline Style을 지양하자 위와 같이, 인라인 스타일은 HTML 요소의 style 속성을 사용하여 직접 스타일을 적용하는 방법이다. 인라인 스타일을 사용하면 간단하고 빠르게 스타일을 적용할 수 있다. HTML 요소에 직접 스타일을 작성하므로 별도의 CSS 파일을 만들 필요도 없다. 하지만 편리함이 있기에 단점도 있는 법. 인라인 스타일의 단점을 살펴보자. 코드의 재사용성이 떨어진다. 인라인 스타일은 요소마다 개별적으로 작성되기 때문에 스타일을 재사용하기가 어렵다. 유지보수가 어렵다. 스타일을 인…","fields":{"slug":"/35-css-module/"},"frontmatter":{"categories":"Dev","title":"CSS Module : 인라인(inline)은 나빠요!","date":"2023.05.30"}},"next":{"fields":{"slug":"/34-url/"}},"previous":{"fields":{"slug":"/36-RAF/"}}},{"node":{"id":"38411151-f411-5c7d-b56f-9a71337b28b6","excerpt":"문득 개발을 하면서 라우팅을 하다가 궁금증이 떠올랐다. ‘왜 우리는 URL에 케밥 케이스를 사용하고 있지?’ 뇌 빼놓고 코딩하는 습관을 고치기 위해, URL 컨벤션에 대해 한 번 찾아보았다!\n   URL에서 케밥 케이스를 사용하는 이유 가독성과 사용자 친화성 URL은 사용자에게 직접 노출되는 요소다. 따라서 가독성이 좋고 사용자가 이해하기 쉬운 URL을 제공하는 것이 중요한데, 특히 케밥 케이스가 단어 사이에 대시를 사용하여 각 단어를 명확하게 구분해주기 때문에 가독성이 좋다. 특수 문자 제한 URL은 특수 문자를 제한하는 경우가 많다. 공백이나 다른 특수 문자를 URL에 직접 사용할 수 없기 때문에, 단어를 구분하는 데에는 특수 문자를 사용할 수 있는 유일한 방법은 대시(-)다. 케밥 케이스는 단어 사이에 대시를 사용하여 단어를 분리하므로, URL의 구조를 깨지 않고 유효한 문자만 사용하여 URL을 작성할 수 있다. 검색 엔진 최적화(SEO) URL은 검색 엔진 최적화에 영향을 …","fields":{"slug":"/34-url/"},"frontmatter":{"categories":"Dev","title":"URL엔 왜 케밥 케이스를 쓰는가?","date":"2023.05.29"}},"next":{"fields":{"slug":"/33-modal/"}},"previous":{"fields":{"slug":"/35-css-module/"}}},{"node":{"id":"9289753f-0142-5900-bfc9-01e47d851e74","excerpt":"삐까뻔쩍 나도 한번 잘살아보자🎵 웹사이트를 만들다 보면 피할 수 없는 그것… 바로 모달 창 만들기..!  드롭다운이 아닌 일반적인 모달의 경우 화면 전체를 채우게끔 구현을 해야 하는데, 이 때 사용할 수 있는 몇 가지 팁을 정리해보려 한다. 현재 내 블로그에 있는  컴포넌트를 예시로 들어보도록 하겠다.   일단은 모달을 만들어보자 버튼을 클릭하면, 다음 사진처럼 모달이 열리게 된다.\n 자.. 그렇다면 닫히는 건 어떻게 해야 할까? 보통 모달은 모달 바깥을 클릭하면 닫히곤 한다.   모달 밖을 클릭하면 모달이 닫히게 하고 싶어! 여기에는 두 가지 방법이 있다. 1. ref 사용하기 ref를 사용해서 클릭 이벤트가 컴포넌트 내부에서 발생한 것이 아니라면 close를 해주는 방법이다.   2. Wrapper를 추가하기 모달을 감싸면서 화면 전체를 덮는 Wrapper를 추가하여 onClick 이벤트를 걸어주는 방법이다. 나는 어차피 모달 뒤에 배경을 넣어주고 싶었기에 Wrapper(Mod…","fields":{"slug":"/33-modal/"},"frontmatter":{"categories":"Dev","title":"React에서 모달 한번 잘 만들어보자 (feat. createPortal & ref)","date":"2023.05.26"}},"next":{"fields":{"slug":"/32-hosts/"}},"previous":{"fields":{"slug":"/34-url/"}}},{"node":{"id":"77804b99-d5ad-5513-ad73-7b56aebac5cd","excerpt":"hosts 파일이란? hosts 파일은 운영체제가 호스트 이름을 IP 주소에 매핑할 때 사용하는 파일이다. 우리가 주소창에 url을 입력하면 DNS를 통해서 해당 도메인의 실제 IP 주소로 접속하게 되는데, 이 때 DNS를 통하지 않고 원하는 IP 주소로 접속하고자 할 때 hosts 파일을 수정하는 방법을 이용할 수 있다. 개발을 하다보면 로컬 환경에서 도메인 테스트를 해야 하는 경우가 생긴다. 이 때 원하는 도메인을 로컬 IP 주소를 바라보게끔 hosts를 수정할 수 있다.   sudo vi /etc/hosts vscode를 사용한다면 를 입력해도 된다. \n터미널에서 위 명령어를 입력하고 비밀번호를 입력하자. 그러면 아래와 같은 파일이 뜰 것이다. 나는 이미 수정된 내용이 있다.   입력 hosts 파일 수정  입력  (저장 후 종료) 입력   요즘은 이런 거 해주는 앱도 있더라 Gasmask와 같은 앱을 사용하는 것도 좋은 방법이다. 기존 hosts 파일을 직접 건드리지 않고 …","fields":{"slug":"/32-hosts/"},"frontmatter":{"categories":"Dev","title":"hosts 파일을 수정해서 local domain을 변경해보자!","date":"2023.05.23"}},"next":{"fields":{"slug":"/31-formdata/"}},"previous":{"fields":{"slug":"/33-modal/"}}},{"node":{"id":"92a8f131-c8d3-5bb5-b33d-91243a0c9ee4","excerpt":"제목을 ‘form생form사’로 하고 싶었으나 처참히 실패 폼과 관련된 서버 통신 작업을 할 때, 보통은 이미지를 업로드하는 api와 폼데이터를 전송하는 api를 함께 사용해 서버로 데이터를 전송하곤 했다. 그러던 어느 날, 파일은 파일대로 json data는 json 대로 넣어서 하나의 api를 사용해 같이 전송해달라는 서버 개발자의 요청을 받게 되었는데…    FormData란? FormData는 HTML 폼 데이터로, 폼을 쉽게 보내도록 도와주는 객체다. 네트워크 메서드의 바디에 FormData 객체를 넣으면, HTTP 메시지는 인코딩되고  속성은 로 지정된 후 전송된다.   어떻게 동시에, 따로 보내야 하지? 그냥 다짜고짜 파일과 함께 보냈더니,  에러가 발생했다. 그래서 file은 multipart/form-data, 그 외의 데이터는 application/json 형식으로 따로 보내기 위해 Blob을 사용해주었다. Blob(Binary Large Object)은 이미지,…","fields":{"slug":"/31-formdata/"},"frontmatter":{"categories":"Dev","title":"file과 json data를 formData에 같이? 따로! 넣어보자","date":"2023.05.17"}},"next":{"fields":{"slug":"/30-cors-fe/"}},"previous":{"fields":{"slug":"/32-hosts/"}}},{"node":{"id":"213ddc9d-949c-58a9-92bc-1e32529646e8","excerpt":"CORS 에러는 터지는데.. 아무힘이 없는 프론트 개발자가 과연 무얼 할 수 있을까?\n   CORS란? CORS (Cross-Origin Resource Sharing)는 웹 어플리케이션에서 다른 도메인의 리소스에 접근할 때 발생하는 보안 이슈를 해결하기 위한 표준 방법이다. CORS는 브라우저 단에서 작동하며, 웹 서버가 특정한 HTTP 헤더를 반환함으로써 웹 브라우저가 자원에 대한 권한을 부여하도록 한다. 이 헤더는 서버에게 특정한 도메인, 프로토콜, 포트에서만 요청을 허용하도록 지시할 수 있다. CORS는 웹 어플리케이션에서 다른 도메인으로부터 리소스를 요청하는 데에 있어서 발생하는 보안 문제를 해결한다. 이전에는 같은 도메인에서만 요청할 수 있었기 때문에, 다른 도메인으로 요청을 보내는 경우 보안 문제가 발생할 수 있었다. 그러나 CORS를 사용하면 다른 도메인에서도 자원에 접근할 수 있다. CORS는 다음과 같은 방법으로 작동한다. 브라우저는 HTTP 요청을 보낸다. 서버…","fields":{"slug":"/30-cors-fe/"},"frontmatter":{"categories":"Dev","title":"CORS 에러를 프론트에서 해결? 무시? 아무튼? 해보자!","date":"2023.05.09"}},"next":{"fields":{"slug":"/9-2022-retrospect/"}},"previous":{"fields":{"slug":"/31-formdata/"}}},{"node":{"id":"b708cc2d-f85a-5c90-bdb9-afac8d81696f","excerpt":"1월. 우아한형제들 입사     뭐니뭐니 해도 올해 가장 큰 사건은 정직원으로 입사를 한 것. 원하던 회사에서 새해를 시작하는 건 무엇보다 짜릿한 일이었다.   2월. 졸업식  이전 회고글에도 올린 사진이지만 한번 더 올려야지 ㅋㅎ 휴학없이 비대면 수업 제대로 뽕뽑고 졸업한 건 다시 생각해봐도 정말 잘한 일.   3월. 코로나 확진  코로나 덕에(?) 1주일간의 유급휴가를 보내게 되었다. 일주일 내내 한 거라곤 누워서 게임하기 만화보기 애니보기… 크게 아프지도 않았어서 정말 꿀같은 시간을 보냈다.   4월. 이사 선릉에서 1년 반을 살고는, 깨끗하고 예쁜 집에서 살아보고 싶다는 로망 하나로 석촌으로 이사를 하게 되었다. 그리고 그 로망은 아주 제대로 실현중.            하지만 너무 비싼 월세와 방음 문제로 인해 1년만 채우고 또 이사를 할 예정… 제주도 본가에서 몇달 살다가 설입쪽으로 원룸을 구해볼까 생각중이다.   5월. 더큰집 지인 방문 더큰집(롯데타워)은 보안이 매우…","fields":{"slug":"/9-2022-retrospect/"},"frontmatter":{"categories":"featured 회고","title":"2022년 한 해 되돌아보기","date":"2023.01.01"}},"next":{"fields":{"slug":"/13-khu-tech-concert/"}},"previous":{"fields":{"slug":"/30-cors-fe/"}}},{"node":{"id":"a30e1aa3-1a72-57ad-9c8b-a879880f567a","excerpt":"사실상 PPT 만든 게 아까워서 쓰는 글. 다시 발표자료를 봤을 때, 가치관이 달라진 부분도 있는 것 같다. 한낱 1년차의 시점으로 만들어진 것이기에 공감 안 가는 부분 있을 수 있음 주의   경희대학교 컴퓨터공학부에서는 최근 TechKHU Concert라는 IT 테크 콘서트를 꾸준히 주최하고 있다. 경희대 컴공 졸업생들이 연사로 참여하여 후배들에게 조언과 팁을 제공하는 자리인데, 어쩌다 보니 내가 연사로 참여하게 되었다 🥲 (복학한 남자 동기들이 대부분 과장, 동장을 맡고 있다 보니 자연스레 제의가 들어왔다.)  엄청 예쁘게 만들어주신 카드 뉴스!! 사실 재학생 입장에서 어떤 이야기들이 도움이 될까를 고민을 해봤지만, 역시나 기술적인 이야기보다는 공부나 취업에 대한 이야기가 더 고프지 않을까 생각이 들었다. 그래서 이전에 오픈부스 컨퍼런스에서 발표했던 내용과 비슷한 이야기를 또 풀어낼 수밖에 없었다. 그때의 발표 내용을 다시 살펴보니, 조금 공격적인 말투도 있었던 것 같고 PPT…","fields":{"slug":"/13-khu-tech-concert/"},"frontmatter":{"categories":"featured Experience","title":"경희대학교 테크 콘서트 강연에 서다","date":"2022.08.30"}},"next":{"fields":{"slug":"/11-ausg/"}},"previous":{"fields":{"slug":"/9-2022-retrospect/"}}},{"node":{"id":"fd09feef-5296-5103-bbab-b1d02bba78a0","excerpt":"요즘 IT가 붐이긴 한가 보다! 아우쓱 지원자도 매 기수마다 기하급수적으로 늘어나고 있다 👀\n나는 4기부터 활동하여 현재 6기 모집이 진행되는 현재까지도 열심히 활동하고 있는 일원이다 :)    AUSG? 아우쓱은 AWSKRUG University Student Group의 약자다. AWSKRUG는 AWS 한국 사용자 모임으로, AUSG는 AWSKRUG 밑에 소속되어 있는 느낌이면서 대학생들끼리만으로 따로 구성되어 있는 그룹이다. 즉 AWS와 클라우드에 관심 있는 대학생들의 모임인 것인데…   그렇다면 AWS나 클라우드에 대해 잘 알아야 하나요? 그렇진 않다! 사실 나도 하나도 모르고 들어갔기 때문에..ㅎㅎ 심지어 프론트엔드를 막 공부하기 시작할 때쯤 들어갔기에 개발에 대해서도 빠삭한 상태가 아니었다. 대학생 모임이기 때문에 실력이나 커리어보다는 열정을 많이 보는 것 같다. 그때의 열정 어디 갔을까 AUSG에 들어가고 싶었던 이유는 단 하나였다. 커뮤니티성 동아리였기 때문이다. 계…","fields":{"slug":"/11-ausg/"},"frontmatter":{"categories":"featured Experience","title":"AUSG(아우쓱) 후기: 두 기수를 지내며 써보는 IT 동아리 회고 글","date":"2022.06.14"}},"next":{"fields":{"slug":"/10-depromeet/"}},"previous":{"fields":{"slug":"/13-khu-tech-concert/"}}},{"node":{"id":"50992d1b-9b57-53ce-a13e-8315e20bceca","excerpt":"내가 디프만을 시작했던 게 8기, 현재 11기가 끝나가고 있다…! 8기부터 참여했던 사람이 아마 나밖에 없을 것 같기도… 어쩌다 고인물이 되었을까..? 이제 디프만 없이는 못 사는 사람이 된 걸지도… 🤔 디프만은 나에게 꿈의 동아리 같은 느낌이었다. 대학생 나부랭이였던 나에게 현직자와 함께 프로젝트를 해본다는 것은 상상조차 못할 일이었다. 부푼 꿈을 앉고 지원했으나 서류에서 탈락한 적도 있었기 때문에 더욱 더 벽이 높게만 느껴지기도 했다. 2학년이 끝나고 열심히 공부한 것을 바탕으로 8기에 또 지원하게 되었고, 결과는 합격이었다. 엄청나게 기뻤다. 당시 코로나가 크게 유행하기 전이었기 때문에 OT도 엄청나게 기대됐었다.  무려 8기 OT 때 찍었던 추억의 사진. 이 때가 2020년도..?   디자이너와 프로그래머가 만났을 때 대학생 신분으로 혼자서 고군분투했던 때와 달리, 디프만에서는 백엔드, 프론트엔드, 디자인 파트 사람들과 함께 프로젝트를 진행했다. 말로만 들어봤던 회사의 개발…","fields":{"slug":"/10-depromeet/"},"frontmatter":{"categories":"featured Experience","title":"DEPROMEET(디프만) 후기: 고인물을 지나 썩은물이 되어서야 써보는 IT 동아리 회고 글","date":"2022.06.14"}},"next":{"fields":{"slug":"/29-vanilla-spa-6/"}},"previous":{"fields":{"slug":"/11-ausg/"}}},{"node":{"id":"dc2411b2-cec3-5024-839e-a3371757b032","excerpt":"JSX란? React는 별도의 파일에 마크업과 로직을 넣어 기술을 인위적으로 분리하는 대신, 마크업과 로직을 모두 포함하는 “컴포넌트”라고 부르는 느슨하게 연결된 유닛으로 관심사를 분리합니다. JSX도 결국엔 표현식입니다. 컴파일이 끝나면, JSX는 JavaScript 객체로 인식됩니다. 이전 글에서, 우리는 마크업과 해당 엘리먼트 내의 로직을 따로 분리하여 코드를 작성했었습니다. JSX를 구현하여 이를 함께 포함할 수 있도록 해봅시다! JSX를 구현한 후, 우리는 컴포넌트 내 렌더함수에서 다음과 같은 형태로 컴포넌트를 작성하게 될 것입니다. 위의 구조가 동작될 수 있게끔 JSX를 구현해보도록 하겠습니다. (Header의 props로는 스트링 타입의 와 함수 타입의 를 전달해주도록 하겠습니다.)   1. jsx 함수 기본 구조 우선 jsx 함수는 스트링 배열과 ${}에 포함된 아규먼트를 받아서, 공정을 거쳐 최종적으로 엘리먼트를 반환하게 됩니다. 초기 template은 div 엘리…","fields":{"slug":"/29-vanilla-spa-6/"},"frontmatter":{"categories":"Dev React만들어보기","title":"바닐라JS(TS)로 리액트 SPA 구현하기 | (6) JSX 구현해보기","date":"2022.05.18"}},"next":{"fields":{"slug":"/28-vanilla-spa-5/"}},"previous":{"fields":{"slug":"/10-depromeet/"}}},{"node":{"id":"33d486c8-9e66-5888-a059-ebcc51e5f1bb","excerpt":"컴포넌트와 라우터가 만들어졌으니, 한번 애플리케이션을 띄워봅시다!   src/index.ts   src/pages/Main.ts   src/pages/Sub.ts   src/components/Header.ts state와 props가 잘 동작하는지도 확인해보기 위한 코드도 함께 넣어주었습니다. 한 번 실행시켜 볼까요? 1. BrowserRouter의 경우    2. HashRouter의 경우    HashRouter의 경우 BrowserRouter와 다르게 이 들어가있는 것을 볼 수 있습니다. 두 경우 모두 state와 props가 잘 보여지고 있네요! 지금은  메서드로 string을 반환하여 UI를 그리고 있는데요, 때문에 클릭같은 이벤트도  메서드 내부에서 등록해주고 있는 것을 볼 수 있습니다. 다음 글에서는 jsx를 구현하여 더욱 효율적으로 엘리먼트를 그릴 수 있도록 해봅시다. src/index.ts src/pages/Main.ts src/pages/Sub.ts src/co…","fields":{"slug":"/28-vanilla-spa-5/"},"frontmatter":{"categories":"Dev React만들어보기","title":"바닐라JS(TS)로 리액트 SPA 구현하기 | (5) 간단한 웹 구현해보기","date":"2022.05.17"}},"next":{"fields":{"slug":"/27-vanilla-spa-4/"}},"previous":{"fields":{"slug":"/29-vanilla-spa-6/"}}},{"node":{"id":"298baa9e-5793-52a3-bbef-07648aa5c161","excerpt":"이번 글에서는 BrowserRouter를 구현해보도록 하겠습니다.   1. Route 타입 정의 이는 HashRouter와 동일합니다.   2. Router 구조 라우터 구조 또한 HashRouter의 경우와 똑같이 잡아주도록 하겠습니다. 다만 이번에는 가 아닌 로 네이밍해주었습니다.   3. Class 초기화 당연히 생상자 내부 코드도 동일하겠죠? 최상단 엘리먼트 객체, fallback url, 라우트들을 초기화해주고, 를 실행합니다.   4. hash가 변경될 때의 이벤트 처리 이제부터 HashRouter와 다른 로직이 등장하게 됩니다. HashRouter의 경우 Hash가 변경될 때 이벤트 처리를 해주었지만, BrowserRouter의 경우 history API를 사용합니다. 에서 window 객체의 이벤트 리스너에 핸들러를 등록해줍시다. 여기서 의문이 들 수 있습니다. document 객체의 이벤트 리스너에 라는 이벤트가 있었나? 싶을 텐데요. 맞습니다. document 객…","fields":{"slug":"/27-vanilla-spa-4/"},"frontmatter":{"categories":"Dev React만들어보기","title":"바닐라JS(TS)로 리액트 SPA 구현하기 | (4) 클래스로 BrowserRouter 구현","date":"2022.05.16"}},"next":{"fields":{"slug":"/26-vanilla-spa-3/"}},"previous":{"fields":{"slug":"/28-vanilla-spa-5/"}}},{"node":{"id":"011e807a-68da-52c3-8bae-111e2004310e","excerpt":"라우터를 구현하는 대표적인 방법에는 두 가지가 있습니다. 바로 BrowserRouter와 HashRouter인데요, 이 둘의 차이에 대해 잘 모르신다면 아래의 글을 먼저 읽어주세요! [BrowserRouter와 HashRouter, 뭐가 다를까? (feat. React Router)] HashRouter와 BrowserRouter를 모두 구현해 볼 텐데요, 이번 글에서는 HashRouter에 대해 먼저 다루어보도록 하겠습니다.   1. Route 타입 정의 라우트는 path와 해당 path에 해당하는 컴포넌트를 가지는 객체입니다.   2. Router 구조 SPA의 최상단 엘리먼트 객체와 정의된 라우트들을 필수적으로 받게 됩니다. 그리고 이벤트와 라우트를 다루는 여러 메서드를 통해 라우팅을 하게 됩니다.   3. Class 초기화 우선, 라우터 객체가 인스턴스화될 때의 설정을 생성자에서 해주어야겠죠. 최상단 엘리먼트 객체, fallback url, 라우트들을 초기화해주고, 를 실행…","fields":{"slug":"/26-vanilla-spa-3/"},"frontmatter":{"categories":"Dev React만들어보기","title":"바닐라JS(TS)로 리액트 SPA 구현하기 | (3) 클래스로 HashRouter 구현","date":"2022.05.15"}},"next":{"fields":{"slug":"/25-browserrouter-hashrouter/"}},"previous":{"fields":{"slug":"/27-vanilla-spa-4/"}}},{"node":{"id":"da8f0537-38c7-5029-815a-f2a7e1fafc96","excerpt":"CRA로 리액트 프로젝트를 생성하면, 기본적으로 react-router-dom을 사용하게 됩니다. 이 react-router-dom은 두 가지 라우터를 제공합니다. 바로 BrowserRouter와 HashRouter죠. 이 두 개념은 react-router-dom에만 해당되는 이야기는 아닙니다. BrowserRouter는 HTML5의 history API를 사용한 방식이고, HashRouter는 URL의 hash를 사용한 방식입니다. 리액트를 사용하지 않고 직접 라우터를 직접 구현한다 하더라도, 우리는 이 방식 중 하나를 선택할 수 있습니다.   react-router 우선은 리액트 라우터에 대해 잠깐 살펴봅시다. SPA가 등장하기 전에는 어떻게 페이지를 이동시켰을까요? 를 사용해서 직접 url을 변경시켰습니다. 하지만 이렇게 하면 모든 페이지를 reload하게 되므로 속도가 느려질 수밖에 없습니다. 리액트에서는 SPA라는 특성을 활용하여 라우터를 이용하여 변경된 소스만 바뀌도록 …","fields":{"slug":"/25-browserrouter-hashrouter/"},"frontmatter":{"categories":"Dev","title":"BrowserRouter와 HashRouter, 뭐가 다를까? (feat. React Router)","date":"2022.05.14"}},"next":{"fields":{"slug":"/24-vanilla-spa-2/"}},"previous":{"fields":{"slug":"/26-vanilla-spa-3/"}}},{"node":{"id":"ed442853-bbac-5b7f-bae7-fb21c9b5e9b4","excerpt":"리액트 컴포넌트와 유사한 구조를 class로 만들어 봅시다!   1. Component 구조 target으로는 해당 컴포넌트가 들어갈 Element를 받게 됩니다. 컴포넌트는 부모로부터 받은 props와 스스로 관리하는 state를 가집니다. 컴포넌트 생명주기와 관련된 메서드, 첫 렌더링과 이후 상태가 변경되었을 때의 리렌더링을 위한 메서드, 상태 업데이트와 이벤트 등록과 관련된 메서드를 적어주었습니다. template 메서드에서는 실제 엘리먼트를 그리게 됩니다. 기본값으로는 빈 스트링을 반환하도록 해주었습니다.   2. \bClass 초기화 우선, 컴포넌트 객체가 인스턴스화될 때의 설정을 생성자에서 해주어야겠죠. 컴포넌트가 들어갈 Element를 받아 등록하고, props도 받아서 등록해줍니다. state는 빈 객체를 할당합니다. setup 메서드에서는 state 초깃값 선언, api 호출 등 컴포넌트가 렌더링되기 전에 일어나야 할 일들을 처리하는 용도입니다. 그 후 컴포넌트를 마…","fields":{"slug":"/24-vanilla-spa-2/"},"frontmatter":{"categories":"Dev React만들어보기","title":"바닐라JS(TS)로 리액트 SPA 구현하기 | (2) 클래스로 컴포넌트 구현","date":"2022.04.12"}},"next":{"fields":{"slug":"/23-vanilla-spa-1/"}},"previous":{"fields":{"slug":"/25-browserrouter-hashrouter/"}}},{"node":{"id":"e6297ae9-9eda-5826-9d3a-64631054d372","excerpt":"별도의 SPA 라이브러리 없이 Single page application을 만들어봅시다! 언어는 타입스크립트, 번들러는 웹팩을 사용하도록 하겠습니다. html과 css 웹팩 플러그인도 함께 설치하고, 바벨 트랜스파일러도 설치합시다. 저는 sass를 사용하기 위한 추가적인 설치를 함께 해주었습니다. devDependencies @babel/cli @babel/core @babel/preset-env @babel/preset-typescript babel-loader css-loader html-loader html-webpack-plugin mini-css-extract-plugin sass sass-loader ts-loader typescript webpack webpack-cli webpack-dev-server   1. webpack.config.js   2. tsconfig.json 절대 경로를 alias를 따로 설정해주었습니다.   3. .babelrc   4. index…","fields":{"slug":"/23-vanilla-spa-1/"},"frontmatter":{"categories":"Dev React만들어보기","title":"바닐라JS(TS)로 리액트 SPA 구현하기 | (1) 기본 세팅","date":"2022.04.10"}},"next":{"fields":{"slug":"/22-virtual-dom/"}},"previous":{"fields":{"slug":"/24-vanilla-spa-2/"}}},{"node":{"id":"e461cca8-06c0-573c-a2c4-a4c184e8fa05","excerpt":"DOM이란? DOM(Document Object Model)이란, 웹 페이지를 이루는 태그들을 브라우저가 트리 구조로 만든 객체 모델입니다. HTML과 자바스크립트를 이어주는 역할로 볼 수 있습니다. 자바스크립트로는 Document라는 전역 객체를 통해 HTML 태그들을 조종할 수 있습니다. 기존의 웹 애플리케이션은 자바스크립트로 직접 DOM을 제어했습니다. 이렇게 돔을 직접 제어하는 방식이 아닌, 리얼 돔을 추상화한 자바스크립트 객체를 구성하여 사용하는 방식이 가상 돔의 개념입니다.   SPA의 등장 전통적인 웹 사이트는 인터렉션이 발생할 때마다 완전히 새로운 페이지를 서버에서 전송해 주었습니다. 그러나 점차 웹 사이트가 고도화됨에 따라 한 페이지에 해당하는 페이지 용량이 커져갔고, 매번 새로운 페이지를 전달하는 게 점점 버거워지게 되었습니다. 또한 기존의 웹 애플리케이션은 돔 전체를 직접 접근하여 조작해서 브라우저에 화면을 나타내는 방식이었고, 웹 어플리케이션의 규모가 커질수록…","fields":{"slug":"/22-virtual-dom/"},"frontmatter":{"categories":"Dev","title":"SPA의 가상돔(virtual DOM)이란? 리액트의 휴리스틱 디핑 알고리즘","date":"2022.03.29"}},"next":{"fields":{"slug":"/21-rendering/"}},"previous":{"fields":{"slug":"/23-vanilla-spa-1/"}}},{"node":{"id":"ccdcd7db-a42f-55ad-8fc9-13b4ded55874","excerpt":"렌더링이란? HTML, CSS, JS 문서가 브라우저에 출력되는 과정을 말합니다. 브라우저는 렌더링을 수행하는 렌더링 엔진을 가지고 있는데, 크롬은 블링크(Blink), 사파리는 웹킷(Webkit), 파이어폭스는 게코(Gecko)라는 렌더링 엔진을 사용합니다. 렌더링 순서는 다음과 같습니다. HTML 파일과 CSS 파일을 파싱해서 각각 Dom Tree와 CSSOM Tree를 만든다. (Parsing) 두 Tree를 결합하여 Render Tree를 만든다. (Style) Render Tree에서 각 노드의 위치와 크기를 계산한다. (Layout) 계산된 값을 이용해 각 노드를 화면상의 실제 픽셀로 변환하고 레이어를 만든다. (Paint) 레이어를 합성하여 실제 화면에 나타낸다. (Composite)   1. Parsing 파싱  우선 HTML을 파싱하여 DOM(Documnet Object Model) Tree를 만들게 됩니다. 파싱 도중 CSS를 만나면 파싱하여 CSSOM(CSS O…","fields":{"slug":"/21-rendering/"},"frontmatter":{"categories":"Dev","title":"브라우저 렌더링 과정 및 사이드 이펙트(리플로우, 리페인트) 살펴보기","date":"2022.03.28"}},"next":{"fields":{"slug":"/20-mac-setting/"}},"previous":{"fields":{"slug":"/22-virtual-dom/"}}},{"node":{"id":"c417652f-a6e2-5cf1-96c2-26a5c2a97018","excerpt":"1. 기본 맥북 세팅 세 손가락 드래그 애플리케이션 창을 움직여 이동시키거나, 문서 내 글을 드래그할 때 클릭으로 하면 불편함이 많죠. 이걸 굳이 클릭해서 끌지 않아도, 간편하게 터치 & 드래그로 할 수 있는 방법이 있습니다. 시스템 환경설정 > 손쉬운 사용 > 포인터 제어기 > 트랙패드 옵션으로 들어가면 드래그 활성화 옵션이 있는데, 세 손가락으로 드래그하기로 설정해주면 됩니다. 저는 세 손가락으로 드래그 활성화를 하고, 페이지를 쓸어 넘기거나 Mission Control을 사용할 경우 네 손가락을 씁니다. 앱 expose 시스템 환경설정 > 트랙패드로 들어가면 앱 Expose를 켤 수 있습니다. 현재 포커스 된 탭과 동일한 애플리케이션 내의 탭들만 노출시키는 기능으로, 큰 기능은 아니지만 유용합니다.   2. 설치할 앱 이건 지극히 프론트를 하는 제 주관적인 의견입니다 크롬, 카카오톡, 노션, VScode, Zoom, Slack, Figma, Typora, iTerm2, Git…","fields":{"slug":"/20-mac-setting/"},"frontmatter":{"categories":"Dev","title":"맥북 마이그레이션이 필요 없을 정도로 간단한 \"맥북 + 개발 환경 세팅\" | iterm2 + ohmyzsh 테마 설정 (m1 기준)","date":"2022.03.05"}},"next":{"fields":{"slug":"/8-2021-retrospect/"}},"previous":{"fields":{"slug":"/21-rendering/"}}},{"node":{"id":"37f10585-0e88-5b7b-a799-e9ca7c35fbaf","excerpt":"입학 나는 경희대학교 컴퓨터공학과에 18학번으로 입학했었다.  사실 컴퓨터공학과에 생각이 있었던 건 아니다. 당시엔 개발 붐이 일어나기 전이었기에, 컴공이라는 과를 떠올리지도 못했다. 수시파 친구들의 경우 생기부와 자소서를 3년 내내 관리해야 하다 보니 자연스레 진로를 일찍부터 고민하게 되는데, 나의 경우 100% 정시파였고 (내신은 거의 4등급 정도 됐었던 걸로 기억한다..ㅎㅎ) 미래에 대해서는 딱히 아무 생각이 없었다. 어떻게든 되겠지~했던 안일했던 나.. 고등학생 시절 제일 좋아했던 과목은 생물이었다. 교육과정에 해당하는 내용 뿐만 아니라 따로 미생물학, 세포학 쪽으로 추가적인 공부를 했을 만큼 관심이 많았다. 생물을 좋아하게 된 계기는 학원 선생님 때문이었지만.. 그래서 그냥 생물학과 가서 연구원을 하고 싶다는 막연한 생각이 있었다. 그런데 막상 수능이 끝나고 정시 원서를 내려니, 겁이 나기 시작했다. 지식인에 생물학과 전망을 검색하니 암울하다는 내용 뿐이었다.(학과 비하 …","fields":{"slug":"/8-2021-retrospect/"},"frontmatter":{"categories":"featured 회고","title":"드디어 컴퓨터공학 척척학사, 나의 4년은 어떠했나","date":"2022.03.03"}},"next":{"fields":{"slug":"/19-daangn-mvp-9/"}},"previous":{"fields":{"slug":"/20-mac-setting/"}}},{"node":{"id":"d812bad4-27c7-5d83-b9d6-ba36ec05b5cf","excerpt":"2021.09.27 - 2021.12.26 동안의 경험에 관한 글입니다. 아마 제 인생 마지막 인턴십이 되겠죠?   Minnie로 보냈던 당근마켓에서의 3개월. 새 맥북 기기부터 다양한 당근마켓 굿즈와 사원증까지! 많은 환영을 받았던 인턴 입사였다. 너무 설레는 순간이었다. 날 포함한 18명의 인턴들 모두가 비슷한 감정을 느꼈으리라 생각한다 :)       저엉말 잘 먹었다. 3명으로 이루어진 6개의 팀 당 법인카드가 하나 씩 주어졌다. 당근마켓은 식비 금액 제한이 없기 때문에, 정말 금액에 대한 고민 없이 마음껏 맛있는 식사를 하며 즐겁게 일할 수 있었다.  사진이 더 많지만 이하 생략.. 식사뿐만 아니라 당근마켓에는 층마다 간식 창고가 있는데,\n다양한 과자와 음료수가 넘쳐나 하루 종일 배고플 틈이 없었다ㅎㅎ  그리워!!!!!!!!!!!   꿀 같은 도서 지원 복지 중 하나인 도서구입비 지원으로 평소 종이책으로 보관하고 싶었던 개발 책들을 몇 권 구입했다. 생각보다 많이 비싼 개…","fields":{"slug":"/19-daangn-mvp-9/"},"frontmatter":{"categories":"featured 인턴회고 당근마켓시리즈","title":"당근마켓 MVP 인턴십 (9) - 당근마켓과 함께 했던 3개월","date":"2022.03.02"}},"next":{"fields":{"slug":"/18-daangn-mvp-8/"}},"previous":{"fields":{"slug":"/8-2021-retrospect/"}}},{"node":{"id":"40d6c592-2996-5799-81c0-612cb8cbecd6","excerpt":"3차 검증 마지막으로 당장모아에 방문했던 찐 유저들의 이야기를 들어보고 싶어요. 우리 서비스에서 어떤 것이 더 필요할까요?  앞서 짧은 기간 동안 진행되었던 검증들에서는 얻기 어려웠던 좀 더 상세한 정보들을 얻기 위해 당장모아를 사용한 찐 유저들을 대상으로 인터뷰를 진행해보기로 했다.  그렇게 총 6명의 찐 방문 유저들을 인터뷰하게 되었다. 주로 저장하는 카테고리, 기존 장소 저장 서비스에서 참고하던 정보의 종류, 당장 모아에서 추가됐으면 하는 정보, 당장모아의 차별성 등에 대한 생각을 물어보았다.   유저 인터뷰로 얻은 인사이트 유저들이 생각하는 당장모아의 가장 큰 차별성은 당근마켓의 신뢰도와 동네 이웃들이 제공하는 장소라는 것이었다. 그렇기에 보다 더 구체적인 장소 정보와 이웃들의 후기가 필요하다. 하지만 POI에 없는 가게와 정보들이 상당히 많다.   유저의 의견과 검증을 통해 느낀 인사이트를 기반으로 마지막으로 프로덕트를 개선해보자!  동네에 저장할 장소가 많지 않다. 동네…","fields":{"slug":"/18-daangn-mvp-8/"},"frontmatter":{"categories":"인턴회고 당근마켓시리즈","title":"당근마켓 MVP 인턴십 (8) - 3차 검증 및 4차 프로덕트 배포","date":"2022.03.01"}},"next":{"fields":{"slug":"/17-daangn-mvp-7/"}},"previous":{"fields":{"slug":"/19-daangn-mvp-9/"}}},{"node":{"id":"5621ae0c-34f2-5dcb-9f5b-631fa2123df3","excerpt":"2차 검증 유저는 테마에 관심이 있는 걸까요? 프로덕트를 이용하지 않고 새로 검증해봐요!  ‘유저가 테마보다 장소 저장을 더 선호한다’는 검증에서 허점은 없었을까? 단편적으로 봤을 때는 테마보다 장소를 저장한 비율이 더 높았다. 하지만 엄청난 차이는 아니었다. 둘 다 낮은 퍼센트였다. 단순히 테마냐 장소냐의 차이로 발생한 문제가 아니었을 수도 있다. 그렇다. 장소를 랜덤으로 보여줘 놓고 저장을 해보라고 했기에, 유저가 원하는 장소가 없었을 수도 있었다. 우린 잘못된 방식으로 검증을 하고 있었다. 다른 요소에 영향을 받지 않는 검증 방식을 찾아야 했다.   “테마에 대한 수요와 공급을 다시 확인해볼까?” “장소와 테마를 직접 테스트로 받아보자!”   검증 2 (수요) - 테마를 텍스트로 받아보기  우선, 사용자들에게 알고 싶은 테마가 있는지 물어봤다.  그 결과, 총 99개의 답변을 받았고 그중 58명의 유저가 추후 테마에 대한 글이 작성되면 알림을 받아보고 싶다고 응답했다. 99개…","fields":{"slug":"/17-daangn-mvp-7/"},"frontmatter":{"categories":"인턴회고 당근마켓시리즈","title":"당근마켓 MVP 인턴십 (7) - 2차 검증","date":"2022.02.28"}},"next":{"fields":{"slug":"/16-daangn-mvp-6/"}},"previous":{"fields":{"slug":"/18-daangn-mvp-8/"}}},{"node":{"id":"d5e94e21-90be-5c26-ac14-14d9a25c37c0","excerpt":"1차 검증 유저는 테마에 관심이 있는 걸까요? 프로덕트를 이용해서 검증해봐요!  유저는 테마에 관심이 있는 걸까? 유저가 테마를 만드는 것에 관심이 있나? 유저가 테마 글을 저장하고 싶은게 맞을까? 유저는 우리 서비스를 어떻게 생각할까?\n3. 유저의 의견을 직접 들어보자! 이전에는 프로덕트의 개선을 통해 공급과 수요를 늘리려고했는데, 그게 아니라 본질적으로 공급과 수요가 있는지부터 확인하고자 했다. 그래서 이미 만든 프로덕트를 활용해서 공급과 수요를 나누어 검증하는 동시에, 유저테스트를 진행해서 현 프로덕트에 대해서 처음보는 유저가 어떻게 느끼는지 보고자 헀다.   1. 유저가 테마를 만드는 것에 관심이 있나?  장소를 하나의 주제로 묶는 테마에 관심이 더 많은지, 장소 자체에 관심이 더 많은지를 파악하기 위해 테마를 작성하는 것과 장소만 저장하는 것을 각각 풍성피드에 띄워 A/B테스트를 진행했다. 검증1의 결과는…?  장소 저장을 한 유저 비율이 더 높았다.   2. 유저가 테마…","fields":{"slug":"/16-daangn-mvp-6/"},"frontmatter":{"categories":"인턴회고 당근마켓시리즈","title":"당근마켓 MVP 인턴십 (6) - 1차 검증","date":"2022.02.27"}},"next":{"fields":{"slug":"/15-daangn-mvp-5/"}},"previous":{"fields":{"slug":"/17-daangn-mvp-7/"}}},{"node":{"id":"7bc34e5b-1c12-5a40-b087-c530514ceaad","excerpt":"3차 프로덕트 유저가 작성과 저장을 쉽게 할 수 있는 방법을 고민해요  1. 공급을 늘리기 위해 1-1. 장소만 저장 가능하다면 테마 생산이 늘어날까? - 장소 저장 기능  장소만 저장할 수 있다면 테마 작성이 더 쉬워지지 않을까? 그래서 기존 장소 카드에서 바로 테마에 저장할 수 있도록 개선했다. 이때 새로운 테마를 간단하게 바로 만들어 추가할 수 있는 방법과 기존 테마에 추가하는 방법 2가지를 제공했다.   1-2. 처음부터 테마를 만들지 않고도 장소들을 저장할 수 있도록 하면 어떨까? - 기본 테마 제공  기본 테마를 제공한다면 테마 작성에 대한 부담감을 덜어줄 수 있지 않을까? 우선적으로 기본 테마에 장소들을 쉽게 추가할 수 있게 되니, 테마를 떠올려야 한다는 부담감을 덜고 좀 더 테마 작성이 쉬워질 것이라 판단했다. 그래서 회원가입을 하면 기본 테마를 비공개로 하나씩 제공하고, 카드를 터치해서 바로 장소를 추가할 수 있도록 구현했다.   1-3. 저장하고 싶을 만한 장소들…","fields":{"slug":"/15-daangn-mvp-5/"},"frontmatter":{"categories":"인턴회고 당근마켓시리즈","title":"당근마켓 MVP 인턴십 (5) - 3차 프로덕트 배포","date":"2022.02.26"}},"next":{"fields":{"slug":"/14-daangn-mvp-4/"}},"previous":{"fields":{"slug":"/16-daangn-mvp-6/"}}},{"node":{"id":"2d4f58e6-4f90-5d3e-82e6-f0f074d7df0c","excerpt":"2차 프로덕트 수요와 공급이 상호작용할 수 있는 프로덕트를 만들어요  ” 테마 작성이 어려운 걸까? ” 그럼 텍스트 필드에서 자세한 예시를 보여주고, 작성완료된 글이 어떻게 보이는지도 함께 보여주면 어떨까? ” 저장할 만한 장소가 떠오르지 않는 걸까? ” 그럼 동네 장소들을 여러 개 보여주면 어떨까? ” 만든 테마를 볼 수 있는 곳이 없어서일까? ” 그럼 만든 테마를 볼 수 있는 공간을 마련해주면 어떨까? 테마에 대한 예시를 구체화한다면 테마 작성이 쉬워지지 않을까? 동네 장소들을 보여준다면 테마에 추가할 장소들을 떠올리기 쉬워지지 않을까? 만든 테마를 볼 수 있는 공간이 있다면 테마를 만들고 싶어 하지 않을까? 이 가설에 대한 검증을 진행해보고자 테마 작성 기능을 개선하고, 엔터테인 요소인 둘러보기 기능을 추가했다.  우리는 이 검증을 거치기 위해 프로덕트를 우선적으로 만들어서 당근마켓 생활서비스 내에 런칭해보기로 했다. 당장모아 서비스는 수요와 공급이 함께 보이고 상호작용이 되…","fields":{"slug":"/14-daangn-mvp-4/"},"frontmatter":{"categories":"인턴회고 당근마켓시리즈","title":"당근마켓 MVP 인턴십 (4) - 2차 프로덕트 배포","date":"2022.02.25"}},"next":{"fields":{"slug":"/7-daangn-mvp-3/"}},"previous":{"fields":{"slug":"/15-daangn-mvp-5/"}}},{"node":{"id":"eae591c0-240b-5d68-91e6-eddd2ee18a44","excerpt":"본격적인 세 번째 이야기를 시작하기에 앞서,\n프론트엔드 개발자인 나, 미니\n백엔드 개발자 루디,\n디자이너 레일라.\n3개월 동안 너무 고생했고 고맙고 미안하고 사랑해요!   문제 정의 아이디어를 구체화하기에 앞서, 우리 팀은 문제를 정의해보았다. 1. 당근 내부에서의 핵심문제 당근에서 알게된 장소 정보를 저장하고 모아볼 수 있는 영역이 없다. 2. 당근 외부에서의 핵심 문제 광고성 게시글이 아닌, 믿을 수 있는 유저로부터 장소를 추천받을 수 있는 공간이 없다. 비슷한 특징/리뷰를 가진 여러 장소들을 한꺼번에 추천받을 수 있는 공간이 없다. 그렇게 나만의 지도를 만들고 공유하는 해결책을 떠올리게 되었다. 원하는 장소를 주제에 맞게 저장할 수 있다. 저장된 장소들을 지도 형태로 동네 이웃들에게 공유할 수 있다. 원하는 장소를 자유롭게 주제에 맞춰 저장하고, 저장된 장소들을 지도 형태로 동네 이웃들에게 공유해보면 어떨까?\n나아가 지도를 만든 사람을 구독하거나 세부 장소를 따로 저장할 수 …","fields":{"slug":"/7-daangn-mvp-3/"},"frontmatter":{"categories":"인턴회고 당근마켓시리즈","title":"당근마켓 MVP 인턴십 (3) - 1차 프로덕트 배포","date":"2022.02.24"}},"next":{"fields":{"slug":"/6-daangn-mvp-2/"}},"previous":{"fields":{"slug":"/14-daangn-mvp-4/"}}},{"node":{"id":"a48e9243-ab94-532f-8fd7-1a8b277ea543","excerpt":"팀도 꾸려졌으니, 아이디어 선정해보자! 세 명으로 구성된 총 6개의 팀. 우리는 제공받은 기획안들을 훑어보며 서로 겹치지 않는 선에서 아이디어를 선정해야 했다. 이 과정에서 우리 팀은 큰 난관을 겪었다. 2 지망으로 골랐던 ‘플리마켓’ 아이디어로 결정되었는데, 아이디어 구체화를 하다 보니 서비스가 생각보다 너무 크다고 느끼게 되었다. 삼사 주 내로 런칭을 해야 피드백을 받고 개선할 시간이 생길 것이라 생각했고, 그러기에는 플리마켓 아이디어가 상당히 까다롭게 느껴졌다. “초반에 빠르게 피봇을 하자.” 결론을 내렸지만 쉽게 되지 않았다. 새로 제안한 아이디어들이 또 피봇 되기 부지기수였고 그렇게 우리는 팀 이름도 정해지지 않은 채 일주일을 보내게 되었다. 일주일 동안 우리 팀은 참 많은 감정을 느꼈다. 하지만 확실한 건, 이 과정을 통해 우리가 보다 더 끈끈해졌다는 것이다. 나중 가서 일이 틀어지느니 빠르게 겪어보는 게 나을 거야, 우리는 서로를 다독이며 파이팅을 외쳤다. 그렇게 고난…","fields":{"slug":"/6-daangn-mvp-2/"},"frontmatter":{"categories":"인턴회고 당근마켓시리즈","title":"당근마켓 MVP 인턴십 (2) - 당신 근처 장소를 모아","date":"2022.02.23"}},"next":{"fields":{"slug":"/5-daangn-mvp-1/"}},"previous":{"fields":{"slug":"/7-daangn-mvp-3/"}}},{"node":{"id":"1caba7b8-2f04-58bf-a38f-74c5d6b7f7a0","excerpt":"당장모아는 11~12월 동안 ‘당근마켓’앱 내 ‘생활서비스’에 런칭되었던 서비스다.\n서초동, 잠실동, 한남동 대상으로 오픈을 진행했다.   MVP [ ˌem viː ˈpi ] Minimum Viable Product : 최소 실행 가능 제품 Most Valuable Player : 최우수 선수  ❝당근마켓 앱 내에 미니 서비스 MVP(Minimum Viable Product)를 런칭할 개발과 디자인 분야의 MVP(Most Valuable Player) 분들을 찾아요” 솔깃했다. MVP 인턴십이라니? 미니 서비스란 어떤 걸까? 어떤 도전과제가 주어질까? 당근마켓이 제시한 아이디어로 미니 서비스를 직접 만들어 당근마켓 내에서 런칭해볼 수 있다니! 서비스에 대한 유저의 실제 반응을 분석하고 개선해볼 수 있다니! 당근마켓 팀원들로부터 피드백과 조언을 받을 수 있다니! 지원을 안 해 볼 수가 없었다. 0주 차에는 오리엔테이션 및 팀 구성, 1-7주 차에는 서비스 MVP 개발 및 디자인, 8…","fields":{"slug":"/5-daangn-mvp-1/"},"frontmatter":{"categories":"인턴회고 당근마켓시리즈","title":"당근마켓 MVP 인턴십 (1) - MVP 인턴십이라고?","date":"2022.02.22"}},"next":{"fields":{"slug":"/12-openbooth/"}},"previous":{"fields":{"slug":"/6-daangn-mvp-2/"}}},{"node":{"id":"ef3512eb-a105-5425-970d-08b1062be8a8","excerpt":"사실상 PPT 만든 게 아까워서 쓰는 글. 다시 발표자료를 봤을 때, 가치관이 달라진 부분도 있는 것 같다. 한낱 1년차의 시점으로 만들어진 것이기에 공감 안 가는 부분 있을 수 있음 주의   나는 디자이너 개발자 협업 동아리, 디프만에서 10기 운영진으로 활동했다. 디프만 10기는 참 많은 일들을 했다. 옥토퍼스 로켓과 함께 애자일 코칭을 진행하기도 하고, 핵클과 함께 A/B 테스트 및 운영 세션을 진행하기도 했다. 오픈부스와의 콜라보도 그 중 하나였다.  오픈부스는 온라인 박람회 플랫폼을 운영하는 스타트업으로, 디프만과 공동 컨퍼런스를 주최하고 싶다는 연락이 왔다. 오픈부스 측에서는 디자이너 2명, 개발자 2명으로 구성했으면 좋겠다고 전했다. “할 사람 없으면 제가 하죠, 뭐.”\n그렇게 내가 하게 되었다.  아무 생각없이 시작한 일이었는데, 생각보다 큰 이벤트였다. 페이지에 내 사진이 걸리고 티켓도 5,000원 상당의 가격으로 매겨졌다. 대단한 연사 멤버가 아닌데다 오천원도 부…","fields":{"slug":"/12-openbooth/"},"frontmatter":{"categories":"featured Experience","title":"컨퍼런스에서 연사로 서다","date":"2022.02.22"}},"next":{"fields":{"slug":"/4-woowahan-tech-camp/"}},"previous":{"fields":{"slug":"/5-daangn-mvp-1/"}}},{"node":{"id":"5a967736-7ba1-5838-953e-3662fed6cc3a","excerpt":"2021.07.05 - 2021.08.31 동안의 경험에 관한 글입니다.   정직원이 하고 싶어! 네이버 인턴이 끝나고, 이제 인턴은 더 하고 싶지 않았다. 소속되지 않은 불안감은 생각보다 힘들었고, 정직원으로서 당당하게 스스로를 개발자라고 소개하는 날이 하루빨리 찾아왔으면 했다. 4월부터 6월까지의 공백기 동안 수많은 도전과 실패를 겪었다. 신입뿐만 아니라 경력 채용 공고에도 서류를 많이 넣었는데, 생각보다 합격률이 높았다. 면접도 1차 면접이나 짧은 전화면접의 경우 무난하게 통과할 수 있었다. 하지만 지원했던 대부분의 회사들이 2-3년 차 경력직을 원하고 있었기 때문인지 심화 기술면접에서 줄줄이 떨어졌다. 좌절감과 실망감도 들긴 했지만, 새로운 질문과 문제들을 경험할 수 있었다는 즐거움이 더 컸다. 내가 경력직만큼의 실력을 갖고 있는 건 당연히 아니었으니 말이다. 면접만 거의 열몇 번을 봤고 그만큼 데이터를 많이 쌓을 수 있었다. 그러던 중 한 스타트업에서 최종 합격을 하게 되…","fields":{"slug":"/4-woowahan-tech-camp/"},"frontmatter":{"categories":"featured 인턴회고","title":"우아한테크캠프, 우테캠 4기 후기 (우아한형제들 최종합격!!)","date":"2022.02.21"}},"next":{"fields":{"slug":"/3-naver/"}},"previous":{"fields":{"slug":"/12-openbooth/"}}},{"node":{"id":"c0261e52-c8b4-5ee4-8f33-7c7687849d1b","excerpt":"2021.03.02 - 2021.04.09 동안의 경험에 관한 글입니다.\n6주 동안 진행되었던 네이버 전환형 인턴입니다 :)   퇴사가 결정되고.. 3-2의 경우 메가존 클라우드 근무와 학업을 병행했는데, 겨울방학이 끝날 때쯤 더 이상 재학생은 인턴을 받지 않기로 결정되었다는 소식을 듣게 되었다. 하지만 나에게 휴학은 존재하지 않는 선택지였다. 코로나로 모든 대학 강의가 비대면으로 진행되는 꿀 기간을 놓칠 수 없었기도 했고, 적어도 취업계를 낼 수 있는 4-2 전까지는 혹시 몰라서라도 빨리 끝내 놔야 한다는 생각이 컸다. 그렇게 2월 말 퇴사가 확정되면서 다른 회사를 알아보기 시작했다. 그러던 중, 우연히 모집기간이 하루 남은 네이버 채용연계형 인턴 모집공고를 보게 되었고, 하루 남은 걸 발견한 것도 인연이다 싶어 서류를 제출하게 되었다. 해당 공고는 서류 - 코딩 테스트 - 1차 면접 - 5주 인턴 - 2차 면접 - 최종 합격의 절차로 진행된다고 안내되어있었다. 서류를 제출한 지…","fields":{"slug":"/3-naver/"},"frontmatter":{"categories":"featured 인턴회고","title":"네이버 전환형 인턴 후기","date":"2022.02.20"}},"next":{"fields":{"slug":"/2-megazone-cloud/"}},"previous":{"fields":{"slug":"/4-woowahan-tech-camp/"}}},{"node":{"id":"37f71a0a-a0f8-56b3-9db0-dc043fe6b20e","excerpt":"2020.11.02 - 2021.02.28 동안의 경험에 관한 글입니다.   AUSG에서의 인연을 시작으로 AUSG는 AWS University Study Group으로, AWSKRGU(AWS 한국 사용자 모임) 소속의 소모임이다. 나는 AUSG(아우쓱)에서 4기부터 활동 중인데, 그곳에서 메가존클라우드에 근무하고 계시는 프론트엔드 개발자 한 분과 알게 되었고 인턴 채용까지 이어지게 되었다.    CloudOne에서의 프론트엔드 개발       CloudOne은 메가존클라우드의 CTC(Commecial Technology Center) 부소에 소속된 팀으로, SpaceONE이라는 Multi Cloud에 대한 오픈소스 CMP(Coud Management Platform)를 개발하고 있다.    1. SpaceONE Storybook 구조 재정립 및 컴포넌트 리팩토링 SpaceONE의 콘솔 앱(대시보드)과 디자인 시스템은 모두 오픈소스로 구축되어있다. spaceone-dev/conso…","fields":{"slug":"/2-megazone-cloud/"},"frontmatter":{"categories":"featured 인턴회고","title":"메가존클라우드에서의 4개월","date":"2021.02.22"}},"next":{"fields":{"slug":"/1-startup/"}},"previous":{"fields":{"slug":"/3-naver/"}}},{"node":{"id":"0629380a-855a-53a9-9137-bbb10210f6ef","excerpt":"2020.06.29 - 2020.10.16 동안의 경험에 관한 글입니다.   경희대학교 현장실습  모든 대학교가 그렇듯, 경희대학교에도 산학 현장실습 프로그램이 있다. 학기 중에 진행하는 장기 현장실습, 방학 중에 진행하는 단기 현장실습으로 나뉜다.  장기 현장실습의 경우, 한 학기에 학점으로 채울 수 있는 학점보다 낮았기 때문에 나는 단기 현장실습을 선택했다. 현장실습의 경우 3-1을 수료한 재학생만 신청 가능하기 때문에, 3학년 여름방학에 지원하게 되었다.   첫 번째 서류, 첫 번째 면접, 첫 번째 인턴 서류 작성도 처음이었다. 작성할만한 내용이 없었기 때문에 프론트엔드 직군으로 지원했음에도, 해봤던 건 뭐든 죄다 적어 넣었다. 어설픈 서류였음에도 학교 현장실습이었기 때문에 무난하게 통과할 수 있었다. 이어서 면접을 진행했고, 칭찬이 가득한(?) 면접이었다. 학부생이 이런 것까지 해봤어요? 와 같은 맥락이었다. 지금 생각해보면 제대로 할 줄 아는 게 없던 꼬꼬마 시절이었지만,…","fields":{"slug":"/1-startup/"},"frontmatter":{"categories":"featured 인턴회고","title":"스타트업에서의 5개월","date":"2020.10.30"}},"next":null,"previous":{"fields":{"slug":"/2-megazone-cloud/"}}}],"categories":["All","Dev","Experience","회고","React만들어보기","인턴회고","당근마켓시리즈"]}},"staticQueryHashes":["1321405810","3649515864"]}